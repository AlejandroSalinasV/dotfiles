  (defwidget player []
      (box :orientation "v" :space-evenly "false"
        (box :class "musicart" :style "background-image: url('{{cover}}');" art)
        (box :class "musictitle" music3)
        (box :class "musicartist" music2)
        (box :orientation "h" :halign "center" :class "musicbtn" :space-evenly "false"
          (button :onclick "playerctl previous" "")
          (button :onclick "playerctl play-pause" musicstat)
          (button :onclick "playerctl next" ""))
        (box :orientation "h" :class "volume" :space-evenly "false" :halign "center"
          (scale :min 0 :max 101 :value volume :onchange "amixer -D pulse sset Master {}%"))))
    (defwidget player_side []
      (box :orientation "h" :space-evenly "false"
        (box :class "musicart-side" :style "background-image: url('{{cover}}');" art)
        (box :class "musicstuff-side" :orientation "v" :space-evenly "false"
          (box :class "musicinfo-side" music3)
          (box :orientation "h" :halign "center" :class "musicbtn-side" :space-evenly "false"
            (button :onclick "playerctl previous" "")
            (button :class "pause-play-side" :onclick "playerctl play-pause" musicstat)
            (button :onclick "playerctl next" "")))))
    (defwidget time_side []
      (box :orientation "v" :space-evenly "false"
        (box :orientation "h" :class "time-side" :space-evenly "true"
          (box :class "hour-side" hour)
          (box :class "minute-side" min))
        (box :class "day-side" day)))
    (defwidget sliders_side []
      (box :orientation "v" :space-evenly "false" :class "sliders-side"
        (box :orientation "h" :class "slider-vol-side" :space-evenly "false"
          (box :class "label-vol-side" "")
          (scale :min 0 :max 101 :value volume :onchange "amixer -D pulse sset Master {}%"))
        (box :orientation "h" :class "slider-bright-side" :space-evenly "false"
          (box :class "label-bright-side" "")
          (scale :min 0 :max 101 :value bright :onchange "brightnessctl s {}%"))
        (box :orientation "h" :class "slider-ram-side" :space-evenly "false"
          (box :class "label-ram-side" "")
          (scale :min 0 :active "false" :max 101 :value ram-used))
        (box :orientation "h" :class "slider-battery-side" :space-evenly "false"
          (box :class "label-battery-side" bat-icon)
          (scale :min 0 :active "false" :max 101 :value battery-remaining))))
    (defwidget sys_side []
      (box :orientation "v" :space-evenly "false"
        (button :class "search-side" :onclick "~/bin/launcher.sh" "  Search...")
        (box :orientation "h" :halign "center" :class "sysbtn" :space-evenly "true"
          (button :class "shutdown-side" :onclick "~/.config/eww/scripts/shutdown.sh" "")
          (button :class "reboot-side" :onclick "~/.config/eww/scripts/reboot.sh" "")
          (button :class "lock-side" :onclick "~/.config/eww/scripts/lockscreen.sh" "")
          (button :class "suspend-side" :onclick "~/.config/eww/scripts/suspend.sh" "")
          (button :class "logout-side" :onclick "~/.config/eww/scripts/logout.sh" ""))))
    (defwidget profile []
    (box :orientation "v" :space-evenly "false" :class "profile"
        (box :orientation "h" :space-evenly "false"
          (box :class "pfp"))
        (box :orientation "v" :space-evenly "false"
          (box :class "pfptxt" :valign "center" "Crag")
          (box :class "subpfptxt" :halign "center" "Risco(dcrag@pe.me)"))))
     (defwidget home_dir []
      (box :orientation "v" :space-evenly "true" :class "home-dir"
        (button :class "l1" :onclick "(thunar ~/${l1})" l1-processed)
        (button :class "l2" :onclick "(thunar ~/${l2})" l2-processed)
        (button :class "l3" :onclick "(thunar ~/${l3})" l3-processed)
        (button :class "l4" :onclick "(thunar ~/${l4})" l4-processed)
        (button :class "l5" :onclick "(thunar ~/${l5})" l5-processed)
        (button :class "l6" :onclick "(thunar ~/${l6})" l6-processed)))
    ;;  (defwidget powermenu []
;;        (box :orientation "h" :halign "center" :class "sysbtn" :space-evenly "true"
;;           (button :class "shutdown-side" :onclick "~/.config/eww/scripts/shutdown.sh" "")
;;           (button :class "reboot-side" :onclick "~/.config/eww/scripts/reboot.sh" "")
;;           (button :class "lock-side" :onclick "~/.config/eww/scripts/lockscreen.sh" "")
;;           (button :class "suspend-side" :onclick "~/.config/eww/scripts/suspend.sh" "")
;;           (button :class "logout-side" :onclick "~/.config/eww/scripts/logout.sh" "")
;;           (button :class "lock-side" :onclick "exec ~/bin/eww close powermenu" "")
;;         )
;;     )




    ;;  Music vars
    (defpoll music :interval "5s"  "playerctl metadata --format '{{ artist }} - {{ title }}'")
    (defpoll music2 :interval "5s"  "playerctl metadata --format '{{ artist }}'")
    (defpoll music3 :interval "5s"  "~/.config/eww/scripts/gettitle")
    (defpoll art :interval "5s"  "~/.config/eww/scripts/getart")
    (defpoll volume :interval "3ms"  "~/.config/eww/scripts/getvol")
    (defpoll bright :interval "1ms"  "~/.config/eww/scripts/getbri")
    (defpoll musicstat :interval "1s"  "~/.config/eww/scripts/spotifystatus")
    (defpoll cover :interval "5s"  "~/.config/eww/scripts/echoart")

    ;; Date vars
    (defpoll number_day :interval "5h"  "date \"+%d\"")
    (defpoll month :interval "10h"  "date \"+%b\"")
    (defpoll min :interval "10s"  "date \"+%M\"")
    (defpoll hour :interval "30m"  "date \"+%H\"")
    (defpoll day :interval "15h"  "~/.config/eww/scripts/getday")
    (defpoll month_full :interval "15h"  "date \"+%B\"")
    (defpoll year_full :interval "15h"  "date \"+%Y\"")

    ;; Battery charge vars
    (defpoll battery-remaining :interval "2m"  "cat /sys/class/power_supply/BAT0/capacity")
    (defpoll bat-icon :interval "2m"  "~/.config/tint2/scripts/battery.sh")

    ;;  Home-dir stuff
    (defpoll l1-processed :interval "20h"  "~/.config/eww/scripts/home-dir/l1-processed")
    (defpoll l2-processed :interval "20h"  "~/.config/eww/scripts/home-dir/l2-processed")
    (defpoll l3-processed :interval "20h"  "~/.config/eww/scripts/home-dir/l3-processed")
    (defpoll l4-processed :interval "20h"  "~/.config/eww/scripts/home-dir/l4-processed")
    (defpoll l5-processed :interval "20h"  "~/.config/eww/scripts/home-dir/l5-processed")
    (defpoll l6-processed :interval "20h"  "~/.config/eww/scripts/home-dir/l6-processed")
    (defpoll l1 :interval "20h"  "~/.config/eww/scripts/home-dir/l1")
    (defpoll l2 :interval "20h"  "~/.config/eww/scripts/home-dir/l2")
    (defpoll l3 :interval "20h"  "~/.config/eww/scripts/home-dir/l3")
    (defpoll l4 :interval "20h"  "~/.config/eww/scripts/home-dir/l4")
    (defpoll l5 :interval "20h"  "~/.config/eww/scripts/home-dir/l5")
    (defpoll l6 :interval "20h"  "~/.config/eww/scripts/home-dir/l6")




    ;;  Sidebar stuff

    (defwindow player_side
			    :geometry (geometry :x "10px" :y "270px" :width "300px" :height "110px")
			     				(player_side))
    (defwindow time_side
			    :geometry (geometry :x "10px" :y "130px" :width "300px" :height "135px")
			     				(time_side))
    (defwindow sliders_side
			    :geometry (geometry :x "10px" :y "385px" :width "300px" :height "205px")
			     				(sliders_side))
    (defwindow sys_side
			    :geometry (geometry :x "10px" :y "595px" :width "300px" :height "153px")
			     				(sys_side))

    ;;  Main Stuff
    ;;  (defwindow calendar_full
;; 			    :geometry (geometry :x "505px" :y "100px" :width "690px" :height "100px" )
;;
;; 				(calendar_full ))
      (defwindow player
			    :geometry (geometry :x "1056px" :y "308px" :width "300px" :height "400px")
			     				(player))
    (defwindow profile
			    :geometry (geometry :x "173px" :y "124px" :width "300px" :height "405px")
			     				(profile))
     (defwindow home_dir
			    :geometry (geometry :x "888px" :y "229px" :width "200px" :height "415px")
			     				(home_dir))
    ;;  (defwindow powermenu :focusable "true"
;; 			    :geometry (geometry :x "35%" :y "20%" :width "30%" :height "40%" )
;;
;; 				(powermenu ))


